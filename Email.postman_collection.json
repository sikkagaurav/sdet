{
	"info": {
		"_postman_id": "e452e234-d675-443f-a8ba-1ae0127848c2",
		"name": "Email",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "2204094",
		"_collection_link": "https://lively-meteor-306512.postman.co/workspace/New-Team-Workspace~5b874cf6-de96-40f8-bf87-f3961c3d29ac/collection/2204094-e452e234-d675-443f-a8ba-1ae0127848c2?action=share&source=collection_link&creator=2204094"
	},
	"item": [
		{
			"name": "https://reqres.in/api/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify the response status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Verify the response ID is an integer\r",
							"pm.test(\"ID is an integer\", function () {\r",
							"    pm.expect(pm.response.json().id).to.be.an('number');\r",
							"});\r",
							"\r",
							"// Verify the response token is a string\r",
							"pm.test(\"Token is a string\", function () {\r",
							"    pm.expect(pm.response.json().token).to.be.an('string');\r",
							"});\r",
							"\r",
							"//Negative Test Case Assertions:\r",
							"// Verify the response status code is 400 for invalid request\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Verify the response contains an error message for invalid request\r",
							"pm.test(\"Response contains error message\", function () {\r",
							"    pm.expect(pm.response.json().error).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var XLSX = require('xlsx');\r",
							"var workbook = XLSX.readFile('C:\\Users\\sikka\\OneDrive\\Documents\\module.XLSX');\r",
							"var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r",
							"var jsonData = XLSX.utils.sheet_to_json(worksheet);\r",
							"\r",
							"pm.globals.set('email', jsonData[0].email);\r",
							"pm.globals.set('password', jsonData[0].password);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}"
				},
				"url": "https://reqres.in/api/register"
			},
			"response": []
		}
	]
}